(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{399:function(e,t,a){"use strict";a.r(t);var r=a(42),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"storage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#storage"}},[e._v("#")]),e._v(" Storage")]),e._v(" "),a("h2",{attrs:{id:"storage-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#storage-2"}},[e._v("#")]),e._v(" Storage")]),e._v(" "),a("p",[a("code",[e._v("machinable.Storage(url:Union[str, NoneType]=None, directory:Union[str, NoneType]=None, submission:Union[str, NoneType]=None, component:Union[str, NoneType]=None)")])]),e._v(" "),a("h3",{attrs:{id:"log"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#log"}},[e._v("#")]),e._v(" log "),a("Badge",{attrs:{text:"property",vertical:"middle"}})],1),e._v(" "),a("p",[e._v("Log interface")]),e._v(" "),a("h3",{attrs:{id:"record"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#record"}},[e._v("#")]),e._v(" record "),a("Badge",{attrs:{text:"property",vertical:"middle"}})],1),e._v(" "),a("p",[e._v("Record interface")]),e._v(" "),a("h3",{attrs:{id:"data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#data"}},[e._v("#")]),e._v(" data")]),e._v(" "),a("p",[a("code",[e._v("data(self, name=None, default=<object object at 0x7f9e1b6b6430>)")])]),e._v(" "),a("p",[e._v("Retrieves a data object from the storage")]),e._v(" "),a("h4",{attrs:{id:"arguments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments"}},[e._v("#")]),e._v(" Arguments")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("name")]),e._v(": Name of the data object. If "),a("code",[e._v("None")]),e._v(", a list of available objects is returned")])]),e._v(" "),a("h3",{attrs:{id:"file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#file"}},[e._v("#")]),e._v(" file")]),e._v(" "),a("p",[a("code",[e._v("file(self, filepath, default=<object object at 0x7f9e1b6b6430>)")])]),e._v(" "),a("p",[e._v("Returns the content of a file in the storage")]),e._v(" "),a("h4",{attrs:{id:"arguments-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-2"}},[e._v("#")]),e._v(" Arguments")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("filepath")]),e._v(": Relative filepath")]),e._v(" "),a("li",[a("strong",[e._v("default")]),e._v(": Optional default if file does not exist")])]),e._v(" "),a("h3",{attrs:{id:"get-local-directory"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-local-directory"}},[e._v("#")]),e._v(" get_local_directory")]),e._v(" "),a("p",[a("code",[e._v("get_local_directory(self, append='')")])]),e._v(" "),a("p",[e._v("Returns the local storage filesystem path, or False if non-local")]),e._v(" "),a("h4",{attrs:{id:"returns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returns"}},[e._v("#")]),e._v(" Returns")]),e._v(" "),a("p",[e._v("Local filesystem path, or False if non-local")]),e._v(" "),a("h3",{attrs:{id:"get-path"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-path"}},[e._v("#")]),e._v(" get_path")]),e._v(" "),a("p",[a("code",[e._v("get_path(self, append='', create=False) -> str")])]),e._v(" "),a("p",[e._v("Returns the storage's relative path")]),e._v(" "),a("h4",{attrs:{id:"arguments-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-3"}},[e._v("#")]),e._v(" Arguments")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("append")]),e._v(": "),a("code",[e._v("String")]),e._v(", optional postfix that is appended to the path")]),e._v(" "),a("li",[a("strong",[e._v("create")]),e._v(": "),a("code",[e._v("Boolean")]),e._v(", if "),a("code",[e._v("True")]),e._v(" path is being created if not existing")])]),e._v(" "),a("h3",{attrs:{id:"get-records"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-records"}},[e._v("#")]),e._v(" get_records")]),e._v(" "),a("p",[a("code",[e._v("get_records(self, scope=None, events=None, created_at=None) -> Union[dict, machinable.storage.record.Record]")])]),e._v(" "),a("p",[e._v("Creates or returns an instance of a record writer")]),e._v(" "),a("h4",{attrs:{id:"arguments-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-4"}},[e._v("#")]),e._v(" Arguments")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("scope")]),e._v(": Name of the record writer. If "),a("code",[e._v("None")]),e._v(", a dict of all registered writers will be returned")]),e._v(" "),a("li",[a("strong",[e._v("events")]),e._v(": Event callback")])]),e._v(" "),a("h3",{attrs:{id:"get-stream"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-stream"}},[e._v("#")]),e._v(" get_stream")]),e._v(" "),a("p",[a("code",[e._v("get_stream(self, path, mode='r', *args, **kwargs)")])]),e._v(" "),a("p",[e._v("Returns a file stream on the storage")]),e._v(" "),a("h4",{attrs:{id:"arguments-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-5"}},[e._v("#")]),e._v(" Arguments")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("path")]),e._v(": Relative file path")]),e._v(" "),a("li",[a("strong",[e._v("mode")]),e._v(": Python file mode\n*args, **kwargs: Optional arguments passed into stream open()")])]),e._v(" "),a("h3",{attrs:{id:"get-submission"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-submission"}},[e._v("#")]),e._v(" get_submission")]),e._v(" "),a("p",[a("code",[e._v("get_submission(self, component=False, or_fail=False)")])]),e._v(" "),a("p",[e._v("Returns the "),a("a",{attrs:{href:"#"}},[e._v("Submission")])]),e._v(" "),a("h4",{attrs:{id:"arguments-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-6"}},[e._v("#")]),e._v(" Arguments")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("component")]),e._v(": Component to be returned if the URL is a submission containing multiple components.\nFor example, set to 0 or -1 to retrieve first or last in the collection respectively")]),e._v(" "),a("li",[a("strong",[e._v("or_fail")]),e._v(": "),a("code",[e._v("Boolean")]),e._v(", by default "),a("code",[e._v("None")]),e._v(" is returned if the submission does not exist.\nIf "),a("code",[e._v("True")]),e._v(", an Exception will be raised instead")])]),e._v(" "),a("h3",{attrs:{id:"has-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#has-file"}},[e._v("#")]),e._v(" has_file")]),e._v(" "),a("p",[a("code",[e._v("has_file(self, filepath) -> bool")])]),e._v(" "),a("p",[e._v("Checks if a file exists")]),e._v(" "),a("h4",{attrs:{id:"arguments-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-7"}},[e._v("#")]),e._v(" Arguments")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("filepath")]),e._v(": "),a("code",[e._v("String")]),e._v(", file name")])]),e._v(" "),a("h3",{attrs:{id:"has-log"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#has-log"}},[e._v("#")]),e._v(" has_log")]),e._v(" "),a("p",[a("code",[e._v("has_log(self) -> bool")])]),e._v(" "),a("p",[e._v("Determines whether log has been written")]),e._v(" "),a("h3",{attrs:{id:"has-records"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#has-records"}},[e._v("#")]),e._v(" has_records")]),e._v(" "),a("p",[a("code",[e._v("has_records(self, scope='default') -> bool")])]),e._v(" "),a("p",[e._v("Determines whether records have been written")]),e._v(" "),a("h4",{attrs:{id:"arguments-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-8"}},[e._v("#")]),e._v(" Arguments")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("scope")]),e._v(": "),a("code",[e._v("String")]),e._v(", name of the record writer. Defaults to 'default'")])]),e._v(" "),a("h3",{attrs:{id:"save-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#save-data"}},[e._v("#")]),e._v(" save_data")]),e._v(" "),a("p",[a("code",[e._v("save_data(self, name, data, overwrite=True)")])]),e._v(" "),a("p",[e._v("Stores a data object")]),e._v(" "),a("h4",{attrs:{id:"arguments-9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-9"}},[e._v("#")]),e._v(" Arguments")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("name")]),e._v(": "),a("code",[e._v("String")]),e._v(", name identifier. Supported formats are .json (JSON), .npy (numpy), .p (pickle), .txt (txt)")]),e._v(" "),a("li",[a("strong",[e._v("data")]),e._v(": The data object")]),e._v(" "),a("li",[a("strong",[e._v("overwrite")]),e._v(": "),a("code",[e._v("Boolean")]),e._v(", if "),a("code",[e._v("False")]),e._v(" write will be appended to file if existing")])]),e._v(" "),a("h3",{attrs:{id:"save-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#save-file"}},[e._v("#")]),e._v(" save_file")]),e._v(" "),a("p",[a("code",[e._v("save_file(self, filepath, data, overwrite=True)")])]),e._v(" "),a("p",[e._v("Writes data to file")]),e._v(" "),a("h4",{attrs:{id:"arguments-10"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-10"}},[e._v("#")]),e._v(" Arguments")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("filepath")]),e._v(": "),a("code",[e._v("String")]),e._v(", filepath with extension.\nSupported formats are .json (JSON), .npy (numpy), .p (pickle), .txt (txt)")]),e._v(" "),a("li",[a("strong",[e._v("data")]),e._v(": The data object")]),e._v(" "),a("li",[a("strong",[e._v("overwrite")]),e._v(": "),a("code",[e._v("Boolean")]),e._v(", if "),a("code",[e._v("False")]),e._v(" write will be appended instead of overwritten")])])])}),[],!1,null,null,null);t.default=s.exports}}]);